{"version":3,"sources":["src/PlayScreen.js","App.js","src/signs/rock.png","src/signs/paper.png","src/signs/scissors.png"],"names":["rock","require","paper","scissors","bgcolor","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","fontSize","img","width","height","button","position","bottom","PlayScreen","useState","counter","setCounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Math","floor","random","Button","onPress","title","StatusBar","App","play","setPlay","marginBottom","marginTop","module","exports"],"mappings":"0MAIMA,EAAOC,EAAQ,IACfC,EAAQD,EAAQ,IAChBE,EAAWF,EAAQ,IAQnBG,EAAU,CAAC,UAAW,UAAW,WAiCjCC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,SAAU,KAEZC,IAAK,CACDC,MAAO,IACPC,OAAQ,KAEZC,OAAQ,CACJC,SAAU,WACVC,OAAQ,MAICC,EAnDI,WAAO,IAAD,EAESC,mBAAS,GAFlB,WAEdC,EAFc,KAELC,EAFK,KAcrB,OAVAC,qBAAU,WACN,GAAe,IAAZF,EAAH,CACA,IAAMG,EAAQC,YAAW,WACrBH,EAAWD,EAAU,KACvB,KACF,OAAO,WACJK,aAAaF,OAEjB,CAACH,IAGA,kBAACM,EAAA,EAAD,CAAMC,MAAOxB,IAAWyB,QAAQ1B,EAAOG,UAAW,CAACE,gBAAiBN,EAAQmB,EAAU,MAChFA,EAAU,EACR,kBAACS,EAAA,EAAD,CAAMF,MAAOzB,EAAOQ,QAASU,GAE7B,oCACA,kBAACU,EAAA,EAAD,CAAOH,MAAOzB,EAAOU,IAAKmB,OA3BxB,CAAClC,EAAKE,EAAMC,GACbgC,KAAKC,MAAoB,EAAdD,KAAKE,aA2BjB,kBAACR,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QACrB,kBAACoB,EAAA,EAAD,CAASC,QAAS,kBAAKf,EAAW,IAAIgB,MAAM,iBAIjD,kBAACC,EAAA,UAAD,CAAWX,MAAM,WCnCZ,SAASY,IAAO,IAAD,EAEJpB,oBAAS,GAFL,WAErBqB,EAFqB,KAEfC,EAFe,KAI5B,OACED,EAAQ,kBAAC,EAAD,MAEN,kBAACd,EAAA,EAAD,CAAMC,MAAOzB,EAAOG,WACf,kBAACwB,EAAA,EAAD,CAAMF,MAAOzB,EAAOQ,QAApB,uBACH,kBAACmB,EAAA,EAAD,CAAMF,MAAO,CAAChB,SAAU,KAAxB,8BACA,kBAACe,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QACpB,kBAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAKK,GAAQ,IAAOJ,MAAM,UAE3C,kBAACC,EAAA,UAAD,CAAWX,MAAM,UAMzB,IAAMzB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,SAAU,GACV+B,aAAc,IAEhB3B,OAAQ,CACNF,MAAO,IACP8B,UAAW,O,uDCvCfC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.306b5575.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Image, StyleSheet, Text, View } from 'react-native';\r\n\r\nconst rock = require(\"./signs/rock.png\");\r\nconst paper = require(\"./signs/paper.png\");\r\nconst scissors = require(\"./signs/scissors.png\");\r\n\r\nconst randomRPS = () =>{\r\n    const signs = [rock,paper,scissors];\r\n    const rand = Math.floor(Math.random()*3);\r\n    return signs[rand];\r\n};\r\n\r\nconst bgcolor = ['#1abc9c', '#3498db', '#9b59b6'];\r\n\r\nconst PlayScreen = () => {\r\n\r\n    const [counter, setCounter] = useState(3)\r\n\r\n    useEffect(() => {\r\n        if(counter === 0) return\r\n        const timer = setTimeout(() => {\r\n            setCounter(counter - 1)\r\n        },500)\r\n        return () => {\r\n           clearTimeout(timer)\r\n        }\r\n    }, [counter])\r\n\r\n    return (\r\n        <View style={StyleSheet.compose(styles.container, {backgroundColor: bgcolor[counter - 1]})}>\r\n            {(counter > 0) ? (\r\n                <Text style={styles.header}>{counter}</Text>\r\n            ) : (\r\n                <>\r\n                <Image style={styles.img} source={randomRPS()} />\r\n                <View style={styles.button}>\r\n               <Button  onPress={()=> setCounter(3)} title=\"Play Again\" />\r\n                </View>\r\n               </>\r\n            )}\r\n          <StatusBar style=\"auto\" />\r\n        </View>\r\n      );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    fontSize: 150\r\n  },\r\n  img: {\r\n      width: 200,\r\n      height: 200\r\n  },\r\n  button: {\r\n      position: \"absolute\",\r\n      bottom: 35,\r\n  }\r\n});\r\n\r\nexport default PlayScreen;\r\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport PlayScreen from './src/PlayScreen'\n\n\n\nexport default function App() {\n\n  const [play, setPlay] = useState(false)\n\n  return (\n    play ? (<PlayScreen/>) : (\n    \n      <View style={styles.container}>\n           <Text style={styles.header}>Rock Paper Scissors</Text>\n        <Text style={{fontSize: 70}}>✊ ✋ ✌️</Text>\n        <View style={styles.button}>\n        <Button onPress={()=> setPlay(true)} title=\"Play\"/>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n    )\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 28,\n    marginBottom: 30\n  },\n  button: {\n    width: 240,\n    marginTop: 50,\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/rock.337d558c.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.d4a03a15.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.004f1986.png\";"],"sourceRoot":""}